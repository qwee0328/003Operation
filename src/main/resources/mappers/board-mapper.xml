<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Board">
	<resultMap id="postInfo" type="java.util.Map">
		<result property="id" column="id" />
		<result property="bulletin_category_id" column="bulletin_category_id" />
		<result property="member_id" column="member_id" />
		<result property="member_nickname" column="member_nickname" />
		<result property="title" column="title" />
		<result property="content" column="content" />
		<result property="write_date" column="write_date" />
		<result property="view_count" column="view_count" />
		<result property="is_fix" column="is_fix" />
		<result property="recom_cnt" column="recom_cnt" />
		<result property="reply_cnt" column="reply_cnt" />
		<result property="file_cnt" column="file_cnt" />
	</resultMap>

	<resultMap id="updatePostInfo" type="java.util.Map">
		<result property="id" column="id" />
		<result property="bulletin_category_id" column="bulletin_category_id" />
		<result property="member_id" column="member_id" />
		<result property="member_nickname" column="member_nickname" />
		<result property="title" column="title" />
		<result property="content" column="content" />
		<result property="write_date" column="write_date" />
		<result property="view_count" column="view_count" />
		<result property="is_fix" column="is_fix" />
		<result property="file_names" column="file_names" />
		<result property="file_ids" column="file_ids" />
	</resultMap>
	
	<resultMap id="myPostInfo" type="java.util.Map">
		<result property="id" column="id"/>
		<result property="bulletin_category_id" column="bulletin_category_id"/>
		<result property="member_id" column="member_id"/>
		<result property="member_nickname" column="member_nickname"/>
		<result property="title" column="title"/>
		<result property="write_date" column="write_date"/>
		<result property="view_count" column="view_count"/>
		<result property="recom_count" column="recom_count"/>
		<result property="reply_count" column="reply_count"/>
		<result property="file_count" column="file_count"/>		
	</resultMap>

	<!-- 게시글 작성 -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		insert
		into bulletin_board values (null, #{bulletin_category_id},
		#{member_id}, #{member_nickname}, #{title}, #{content}, default,
		default, #{is_fix});
	</insert>

	<!-- 게시글 목록 불러오기 -->
	<select id="selectAll" resultMap="postInfo">
		select * from postInfo where bulletin_category_id =
		#{bulletin_category_id}
		<if test="bulletin_category_id.equals('notice')">
			and is_fix = 1
		</if>
		order by id desc
		<if test="bulletin_category_id.equals('notice')">
			limit 0,5;
		</if>
		<if test="!bulletin_category_id.equals('notice')">
			limit #{start},#{count};
		</if>
	</select>

	<!-- 게시글 검색 결과 불러오기 -->
	<select id="selectByKeyword" resultMap="postInfo">
		select * from postInfo
		where bulletin_category_id = #{bulletin_category_id} and ${select}
		like #{keyword}
		order by id desc
		limit #{start},#{count};
	</select>

	<!-- 게시글 총 개수 불러오기 -->
	<select id="selectTotalCnt" resultType="int">
		select count(*) from bulletin_board where bulletin_category_id =
		#{bulletin_category_id}
		<if test="bulletin_category_id.equals('notice')">
			and is_fix = 1
		</if>
		order by id desc;
	</select>

	<!-- 검색 게시글 총 개수 불러오기 -->
	<select id="selectSearchCnt" resultType="int">
		select count(*) from
		bulletin_board where bulletin_category_id = #{bulletin_category_id}
		and ${select} like #{keyword}
		order by id desc;
	</select>

	<!-- 게시글 정보 불러오기 -->
	<select id="selectPostById" resultMap="updatePostInfo">
		select * from
		updatePostInfo where id = #{id};
	</select>

	<!-- 게시글 수정 -->
	<update id="update">
		update bulletin_board set title=#{title},
		content=#{content} where id=#{id};
	</update>

	<!-- 게시글 조회수 업데이트 -->
	<update id="updateViewCountById">
		update bulletin_board set view_count= view_count+1
		where id=#{id};
	</update>

	<!-- 게시글 추천수 불러오기 -->
	<select id="selectRecommendById" resultType="int">
		select count(*)
		count from board_recommend where bulletin_board_id=#{id};
	</select>

	<!-- 게시글 북마크 수 불러오기 -->
	<select id="selectBookmarkById" resultType="int">
		select count(*) count
		from board_bookmark where bulletin_board_id=#{id};
	</select>

	<!-- 게시글 댓글 수 불러오기 -->
	<select id="selectReplyById" resultType="int">
		select count(*) count
		from reply where bulletin_board_id=#{id} and parent_reply_id is null;
	</select>

	<!-- 게시글 추천 -->
	<insert id="insertRecommendById">
		insert board_recommend values(0,#{postId},#{userId});
	</insert>

	<!-- 게시글 북마크 -->
	<insert id="insertBookmarkById">
		insert board_bookmark values(0,#{postId},#{userId});
	</insert>

	<!-- 게시글 추천 취소 -->
	<delete id="deleteRecommendById">
		delete from board_recommend where
		bulletin_board_id=#{postId} and member_id=#{userId};
	</delete>

	<!-- 게시글 북마크 취소 -->
	<delete id="deleteBookmarkById">
		delete from board_bookmark where
		bulletin_board_id=#{postId} and member_id=#{userId};
	</delete>

	<!-- 내가 추천했는지 -->
	<select id="selectRecommendFromMy" resultType="boolean">
		select * from
		board_recommend where bulletin_board_id=#{postId} and
		member_id=#{userId};
	</select>

	<!-- 내가 북마크했는지 -->
	<select id="selectBookmarkFromMy" resultType="boolean">
		select * from
		board_bookmark where bulletin_board_id=#{postId} and
		member_id=#{userId};
	</select>

	<!-- 게시글 파일 불러오기 -->
	<select id="selectFileById" resultType="map">
		select * from
		<if test="type.equals('free')">
			bulletin_board_file
		</if>
		<if test="type.equals('question')">
			fqa_board_file
		</if>
		where
		<if test="type.equals('free')">
			bulletin_board_id=#{id}
		</if>
		<if test="type.equals('question')">
			fqa_board_id=#{id}
		</if>
	</select>

	<!-- 이전글 다음글 불러오기 -->
	<select id="selectPrevNextPost" resultType="map">
		select id, NextId, (select title from bulletin_board where id =
		NextId) as NextTitle,
		PrevId, (select title from bulletin_board where
		id = PrevId) as PrevTitle
		from(
		select id,
		lead(id) over (order by id) as
		NextId,
		lag(id) over
		(order by id) as PrevId
		from bulletin_board
		where
		<if test="select.equals('title')">
			title like #{keyword}
		</if>
		<if test="select.equals('content')">
			content like #{keyword}
		</if>
		<if test="select.equals('member_nickname')">
			member_nickname like #{keyword}
		</if>
		and bulletin_category_id=#{type}
		) as boardLeadLag where id=#{postId};
	</select>

	<!-- 게시글 댓글 작성하기 -->
	<insert id="insertPostReply">
		insert reply (bulletin_board_id, member_id,
		member_nickname, content, write_date)
		values(#{postId},#{userId},#{loginNickName},#{reply},
		convert_tz(now(), '+00:00', '+09:00'));
	</insert>

	<!-- 게시글 댓글 불러오기 -->
	<select id="selectAllReply"
		resultType="com.operation.dto.ReplyDTO">
		<!-- select * from replyInfoList where parent_reply_id is null and bulletin_board_id 
			=#{bulletin_board_id} order by id desc limit #{start},#{count}; -->
		select replyInfoList.*, count(reply_recommend.id) > 0 as isrecommend
		from replyInfoList
		left join reply_recommend on replyInfoList.id = reply_recommend.reply_id
		and reply_recommend.member_id = #{userId}
		where
		replyInfoList.bulletin_board_id = #{bulletin_board_id}
		and replyInfoList.parent_reply_id is null
		group by replyInfoList.id
		order by replyInfoList.id desc limit #{start},#{count};;

		<!--select replyInfoList.*, if(reply_recommend.member_id is not null,
		true,
		false) as isrecommend
		from replyInfoList
		left join
		reply_recommend on
		replyInfoList.member_id = reply_recommend.member_id
		and
		replyInfoList.id=reply_recommend.reply_id
		and
		reply_recommend.member_id=#{userId}
		where
		bulletin_board_id=#{bulletin_board_id} and parent_reply_id is null
		group by id
		order by id desc limit #{start},#{count};-->
	</select>

	<!-- 게시글 댓글 총 개수 -->
	<select id="selectTotalReplyCnt" resultType="int">
		select count(*) from
		reply where bulletin_board_id=#{id} and parent_reply_id is null;
	</select>

	<!--// 댓글 추천하기 -->
	<insert id="insertReplyRecommend">
		insert into reply_recommend values
		(0,#{replyId},#{userId});
	</insert>

	<!-- 댓글 추천 삭제 -->
	<delete id="deleteReplyRecommend">
		delete from reply_recommend where reply_id=#{replyId}
		and member_id=#{userId};
	</delete>

	<!-- 댓글 삭제 -->
	<delete id="deleteReply">
		delete from reply where id=#{replyId};
	</delete>

	<!-- 댓글 업데이트 -->
	<update id="updateReply">
		update reply set content=#{replyContents}
		where
		id=#{replyId};
	</update>

	<!-- 대 댓글 작성하기 -->
	<insert id="insertReReply">
		insert reply (bulletin_board_id, parent_reply_id,
		member_id,
		member_nickname, content, write_date)
		values(#{postId},#{parentId},#{userId},#{loginNickName},#{reply},
		convert_tz(now(), '+00:00', '+09:00'));
	</insert>

	<!-- 게시글 댓글 불러오기 -->
	<select id="selectReReplyAll"
		resultType="com.operation.dto.ReplyDTO">
		select replyInfoList.*, if(reply_recommend.member_id is not
		null,
		true, false) as isrecommend
		from replyInfoList
		left join
		reply_recommend on replyInfoList.member_id = reply_recommend.member_id
		and replyInfoList.id=reply_recommend.reply_id
		and
		reply_recommend.member_id=#{userId}
		where parent_reply_id=#{parentId}
		and parent_reply_id is not null
		group by id;
	</select>

	<!-- 게시글 삭제 -->
	<delete id="deletePost">
		delete from bulletin_board where id=#{id};
	</delete>
	
	
	<!-- 내 게시글 모아보기 -->
	<select id="selectMyPost" resultMap="myPostInfo">
		select * from myPost where member_id=#{member_id} order by id desc limit ${start},${count};
	</select>
	
	<!-- 내 게시글 총 개수 불러오기 -->
	<select id="selectMyPostTotalCnt" resultType="int">
		select count(*) from myPost where member_id=#{member_id};
	</select>
	
	<!-- 선택한 게시글 일괄 삭제 -->
	<delete id="deleteSelectPost">
		delete from bulletin_board where id in 
		<foreach collection="array" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		and member_id=#{member_id};
	</delete>
	
	<!-- 게시글 검색 결과 불러오기 -->
	<select id="searchMyPost" resultMap="myPostInfo">
		select * from myPost where member_id=#{member_id} and ${select} like #{keyword}
		order by id desc limit ${start},${count};
	</select>
	
	<!-- 검색 게시글 총 개수 불러오기 -->
	<select id="selectSearchMyPostCnt" resultType="int">
		select count(*) from myPost where member_id=#{member_id} and ${select} like #{keyword};
	</select>
	
	<!-- 북마크 불러오기 -->
	<select id="selectMyBookmark" resultMap="postInfo">
		select * from myBookmark where board_bookmark_mamber_id = #{member_id}
		order by board_bookmark_id desc limit #{start},#{count};
	</select>
	
	<!-- 내 북마크 게시글 수 불러오기 -->
	<select id="selectMyBookmarkTotalCnt" resultType="int">
		select count(*) from myBookmark where board_bookmark_mamber_id = #{member_id};
	</select>
	
	<!-- 검색한 북마크 불러오기 -->
	<select id="searchMyBookmark" resultMap="postInfo">
		select * from myBookmark where board_bookmark_mamber_id = #{member_id} and ${select} like #{keyword}
		order by board_bookmark_id desc limit #{start},#{count};
	</select>
	
	<!-- 검색한 내 북마크 게시글 수 불러오기 -->
	<select id="selectSearchMyBookmarkCnt" resultType="int">
		select count(*) from myBookmark where board_bookmark_mamber_id = #{member_id} and ${select} like #{keyword};
	</select>
</mapper>